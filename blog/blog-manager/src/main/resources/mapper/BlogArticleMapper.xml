<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.kop.blob.repo.mapper.BlogArticleMapper">
  <resultMap id="BaseResultMap" type="com.github.kop.blob.module.entity.BlogArticle">
    <!--@mbg.generated-->
    <!--@Table blog_article-->
    <id column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="article_title" jdbcType="VARCHAR" property="articleTitle" />
    <result column="article_content" jdbcType="LONGVARCHAR" property="articleContent" />
    <result column="article_status" jdbcType="TINYINT" property="articleStatus" />
    <result column="thumbs_cont" jdbcType="BIGINT" property="thumbsCont" />
    <result column="views_count" jdbcType="BIGINT" property="viewsCount" />
    <result column="comments_count" jdbcType="BIGINT" property="commentsCount" />
    <result column="comments_status" jdbcType="TINYINT" property="commentsStatus" />
    <result column="visible_status" jdbcType="TINYINT" property="visibleStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
    <result column="version" jdbcType="BIGINT" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    article_id, article_title, article_content, article_status, thumbs_cont, views_count, 
    comments_count, comments_status, visible_status, create_time, create_user_id, update_time, 
    update_user_id, deleted, version
  </sql>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update blog_article
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="article_title = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.articleTitle != null">
            when article_id = #{item.articleId,jdbcType=BIGINT} then #{item.articleTitle,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="article_content = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.articleContent != null">
            when article_id = #{item.articleId,jdbcType=BIGINT} then #{item.articleContent,jdbcType=LONGVARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="article_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.articleStatus != null">
            when article_id = #{item.articleId,jdbcType=BIGINT} then #{item.articleStatus,jdbcType=TINYINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="thumbs_cont = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.thumbsCont != null">
            when article_id = #{item.articleId,jdbcType=BIGINT} then #{item.thumbsCont,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="views_count = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.viewsCount != null">
            when article_id = #{item.articleId,jdbcType=BIGINT} then #{item.viewsCount,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="comments_count = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.commentsCount != null">
            when article_id = #{item.articleId,jdbcType=BIGINT} then #{item.commentsCount,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="comments_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.commentsStatus != null">
            when article_id = #{item.articleId,jdbcType=BIGINT} then #{item.commentsStatus,jdbcType=TINYINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="visible_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.visibleStatus != null">
            when article_id = #{item.articleId,jdbcType=BIGINT} then #{item.visibleStatus,jdbcType=TINYINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when article_id = #{item.articleId,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createUserId != null">
            when article_id = #{item.articleId,jdbcType=BIGINT} then #{item.createUserId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when article_id = #{item.articleId,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateUserId != null">
            when article_id = #{item.articleId,jdbcType=BIGINT} then #{item.updateUserId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="deleted = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.deleted != null">
            when article_id = #{item.articleId,jdbcType=BIGINT} then #{item.deleted,jdbcType=TINYINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="version = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.version != null">
            when article_id = #{item.articleId,jdbcType=BIGINT} then #{item.version,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
    </trim>
    where article_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.articleId,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="article_id" keyProperty="articleId" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into blog_article
    (article_title, article_content, article_status, thumbs_cont, views_count, comments_count, 
      comments_status, visible_status, create_time, create_user_id, update_time, update_user_id, 
      deleted, version)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.articleTitle,jdbcType=VARCHAR}, #{item.articleContent,jdbcType=LONGVARCHAR}, 
        #{item.articleStatus,jdbcType=TINYINT}, #{item.thumbsCont,jdbcType=BIGINT}, #{item.viewsCount,jdbcType=BIGINT}, 
        #{item.commentsCount,jdbcType=BIGINT}, #{item.commentsStatus,jdbcType=TINYINT}, 
        #{item.visibleStatus,jdbcType=TINYINT}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.createUserId,jdbcType=BIGINT}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.updateUserId,jdbcType=BIGINT}, 
        #{item.deleted,jdbcType=TINYINT}, #{item.version,jdbcType=BIGINT})
    </foreach>
  </insert>
</mapper>